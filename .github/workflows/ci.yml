name: 🔄 Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM UTC

env:
  NODE_VERSION: '18'
  NPM_VERSION: 'latest'

jobs:
  # 🧪 Test Suite
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 ESLint Analysis
        run: npm run lint --if-present

      - name: 🎨 Prettier Format Check
        run: npm run format:check --if-present

      - name: 🧪 Run Unit Tests
        run: npm test --if-present

      - name: 🏗️ Build Test
        run: npm run build

      - name: 📊 Test Coverage
        run: npm run test:coverage --if-present

  # 🔒 Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔒 NPM Audit
        run: npm audit --audit-level=moderate

      - name: 🔒 CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔒 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # 📊 Performance Testing
  performance:
    name: 📊 Performance Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build Project
        run: npm run build

      - name: 📊 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # 🧹 Dependency Updates
  dependencies:
    name: 🧹 Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 🧹 Check for Updates
        run: npm outdated || true

      - name: 🔄 Auto Update Dependencies
        run: |
          npm update
          npm audit fix
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package*.json
          git diff --staged --quiet || git commit -m "🤖 Auto-update dependencies [skip ci]"
          git push
